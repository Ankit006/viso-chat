{"version":3,"sources":["img/dark-heart.svg","img/heart.svg","img/comments.svg","components/Card.js","img/send.svg","components/SendInput.js","components/Comments.js","requests/useFetchComments.js","screens/ShowComments.js"],"names":["connect","state","accountId","userdata","userId","accessToken","token","post","elementView","accountDetail","dispatch","history","useHistory","useState","like","setLike","handleAccountView","type","VIEW_ACCOUNT","payload","push","addLike","a","axios","postId","_id","headers","Authorization","data","status","console","log","className","ref","src","profileImg","onClick","alt","height","width","username","imageUrl","description","Like","noLike","comments","SHOW_POST","SendInput","onChangeValue","value","sendMessage","onChange","send","Comments","comment","profileImage","useFetchComments","start","end","loading","setLoading","error","setError","numberOfComments","useRef","setComments","loadingComments","current","res","prevState","useEffect","source","CancelToken","cancel","posts","showPost","login","loginState","commentSize","setCommentSize","newComment","setNewComment","observer","elementObserver","useCallback","node","disconnect","IntersectionObserver","entries","isIntersecting","observe","saveNewComment","key","Card","map","index","length","e","DOMPurify","sanitize","target"],"mappings":"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","file":"static/js/15.48526457.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/dark-heart.f1f73767.svg\";","export default __webpack_public_path__ + \"static/media/heart.fb824694.svg\";","export default __webpack_public_path__ + \"static/media/comments.d2e37373.svg\";","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n// icons\r\nimport noLike from \"../img/dark-heart.svg\";\r\nimport Like from \"../img/heart.svg\";\r\nimport comments from \"../img/comments.svg\";\r\nimport { VIEW_ACCOUNT, SHOW_POST } from \"../state/stateConstant\";\r\n\r\nfunction Card({\r\n  post,\r\n  elementView,\r\n  accountDetail,\r\n  dispatch,\r\n  accountId,\r\n  accessToken,\r\n}) {\r\n  const history = useHistory();\r\n  const [like, setLike] = useState(false);\r\n  const handleAccountView = () => {\r\n    if (post.userId === accountId) {\r\n      history.push(\"/account\");\r\n      return;\r\n    }\r\n    dispatch({ type: VIEW_ACCOUNT, payload: post.userId });\r\n    history.push(\"/viewaccount\");\r\n  };\r\n\r\n  const showComments = () => {\r\n    dispatch({ type: SHOW_POST, payload: post });\r\n    history.push(\"/showComments\");\r\n  };\r\n\r\n  const addLike = async () => {\r\n    setLike(true);\r\n    const res = await axios.post(\r\n      \"/api/addLike\",\r\n      {\r\n        postId: post._id,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      }\r\n    );\r\n    if (res.data.status === \"success\") {\r\n      console.log(\"success\");\r\n    }\r\n  };\r\n  /**\r\n   *  if accountDetail property is \"all\" than while\r\n   * loading post card will also show username and the profileImage\r\n   * on the top left corner otherwise it will not show it\r\n   */\r\n\r\n  return (\r\n    <div className=\"card\" ref={elementView}>\r\n      {accountDetail === \"all\" ? (\r\n        <div className=\"user\">\r\n          <img\r\n            src={post.profileImg}\r\n            onClick={handleAccountView}\r\n            alt=\"profilePic\"\r\n            height=\"50\"\r\n            width=\"50\"\r\n          />\r\n          <p onClick={handleAccountView}>{post.username}</p>\r\n        </div>\r\n      ) : null}\r\n      <div className=\"userPost\">\r\n        <img src={post.imageUrl} alt=\"postPic\" width=\"500\" height=\"300\" />\r\n        <p>{post.description}</p>\r\n      </div>\r\n      <div className=\"commentSection\">\r\n        <span onClick={addLike}>\r\n          {like ? (\r\n            <img src={Like} alt=\"noLike\" height=\"23\" width=\"23\" />\r\n          ) : (\r\n            <img src={noLike} alt=\"noLike\" height=\"23\" width=\"23\" />\r\n          )}\r\n        </span>\r\n        <img\r\n          src={comments}\r\n          alt=\"comments\"\r\n          height=\"23\"\r\n          width=\"23\"\r\n          onClick={showComments}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    accountId: state.userdata.userId,\r\n    accessToken: state.token.accessToken,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Card);\r\n","export default __webpack_public_path__ + \"static/media/send.57a49ec4.svg\";","import React from \"react\";\nimport send from \"../img/send.svg\";\nexport default function SendInput({ onChangeValue, value, sendMessage }) {\n  return (\n    <div className=\"send\">\n      <div>\n        <input type=\"text\" onChange={onChangeValue} value={value} />\n        <img\n          src={send}\n          alt=\"send\"\n          height=\"25\"\n          width=\"25\"\n          onClick={sendMessage}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Comments({ comment, elementView }) {\n  return (\n    <div className=\"commentItem\" ref={elementView}>\n      <div>\n        <img src={comment.profileImage} alt=\"profile\" height=\"30\" width=\"30\" />\n        <p>{comment.username}</p>\n      </div>\n      <h3>{comment.comment}</h3>\n    </div>\n  );\n}\n","import { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction useFetchComments(postId, start, end) {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const numberOfComments = useRef(false);\n  const [comments, setComments] = useState([]);\n\n  const loadingComments = async (postId, start, end) => {\n    if (\n      numberOfComments.current !== false &&\n      start >= numberOfComments.current\n    ) {\n      return;\n    }\n\n    setLoading(true);\n    setError(false);\n    const res = await axios.post(\"/api/getComments\", {\n      postId,\n      start,\n      end,\n    });\n\n    if (res.data.status === \"success\") {\n      setComments((prevState) => [...prevState, ...res.data.comments]);\n      numberOfComments.current = res.data.numberOfComments;\n      setLoading(false);\n    } else if (res.data.status === \"error\") {\n      setLoading(false);\n      setError(true);\n    }\n  };\n\n  useEffect(() => {\n    const source = axios.CancelToken.source();\n    loadingComments(postId, start, end);\n    return () => {\n      source.cancel();\n    };\n  }, [start, end]);\n\n  return { loading, comments, error, setComments };\n}\n\nexport default useFetchComments;\n","import React, { useCallback, useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Card from \"../components/Card\";\nimport Comments from \"../components/Comments\";\nimport { connect } from \"react-redux\";\nimport useFetchComments from \"../requests/useFetchComments\";\nimport SendInput from \"../components/SendInput\";\nimport axios from \"axios\";\nimport DOMPurify from \"dompurify\";\n\nfunction ShowComments({\n  post,\n  accountId,\n  profileImage,\n  username,\n  accessToken,\n  login,\n}) {\n  const [commentSize, setCommentSize] = useState({ start: 0, end: 4 });\n  const [newComment, setNewComment] = useState(\"\");\n  const observer = useRef();\n  const history = useHistory();\n\n  const { loading, comments, setComments } = useFetchComments(\n    post._id,\n    commentSize.start,\n    commentSize.end\n  );\n\n  // observe the last element\n  const elementObserver = useCallback(\n    (node) => {\n      if (loading) return;\n      if (observer.current) observer.current.disconnect();\n      observer.current = new IntersectionObserver((entries) => {\n        if (entries[0].isIntersecting) {\n          setCommentSize({\n            start: commentSize.start + 4,\n            end: commentSize.end + 4,\n          });\n        }\n      });\n      if (node) observer.current.observe(node);\n    },\n    [loading]\n  );\n\n  const handleNewComment = (e) => {\n    setNewComment(DOMPurify.sanitize(e.target.value));\n  };\n\n  const saveNewComment = async () => {\n    if (!login) {\n      history.push(\"/login\");\n    }\n    setComments((prevState) => [\n      ...prevState,\n      {\n        comment: newComment,\n        profileImage: profileImage,\n        userId: accountId,\n        username: username,\n      },\n    ]);\n\n    const res = await axios.post(\n      \"/api/addComment\",\n      {\n        postId: post._id,\n        comment: newComment,\n      },\n      {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      }\n    );\n\n    if (res.data.status === \"success\") {\n      console.log(\"success\");\n    }\n  };\n\n  let key = 0; // unque key\n  return (\n    <>\n      <div className=\"commentPage\">\n        <Card post={post} accountDetail=\"all\" />\n        <div className=\"commentArea\">\n          {comments.map((comment, index) => {\n            key++;\n            if (index + 1 === comments.length) {\n              return (\n                <Comments\n                  key={key}\n                  comment={comment}\n                  elementView={elementObserver}\n                />\n              );\n            } else {\n              return <Comments key={key} comment={comment} />;\n            }\n          })}\n        </div>\n      </div>\n      <SendInput\n        value={newComment}\n        sendMessage={saveNewComment}\n        onChangeValue={handleNewComment}\n      />\n    </>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    post: state.posts.showPost,\n    accountId: state.userdata.userId,\n    username: state.userdata.username,\n    profileImage: state.userdata.profileImage,\n    accessToken: state.token.accessToken,\n    login: state.loginState.login,\n  };\n}\n\nexport default connect(mapStateToProps)(ShowComments);\n"],"sourceRoot":""}