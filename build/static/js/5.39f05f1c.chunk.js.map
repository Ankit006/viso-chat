{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","img/profile.svg","img/home.svg","img/like.svg","img/search.svg","components/BottomNavBar.js","modules/notificationBarControl.js","components/notification.js","img/Ellipsis-1s-200px.svg","img/dark-heart.svg","img/heart.svg","img/comments.svg","components/Card.js","requests/useFetchPosts.js","components/Posts.js","requests/followHandler.js","components/Account.js","components/preloader.js","screens/UsersAccount.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","connect","state","profileImage","userdata","notifications","saveNotifications","className","to","src","home","alt","height","width","search","style","textDecoration","like","profile","errorBarControl","setError","message","type","setTimeout","successBarControl","setSuccess","ErrorBar","messageType","SuccessBar","accountId","userId","accessToken","token","post","elementView","accountDetail","dispatch","history","useHistory","useState","setLike","handleAccountView","VIEW_ACCOUNT","payload","addLike","a","axios","postId","_id","headers","Authorization","data","status","console","log","ref","profileImg","onClick","username","imageUrl","description","Like","noLike","comments","SHOW_POST","useFetchPosts","skip","api","method","jsonData","loading","setLoading","error","numberOfDocs","useRef","posts","setPosts","loadingPosts","current","get","postsRes","prevState","numberOfDocuments","useEffect","source","CancelToken","cancel","marginTop","setSkip","observer","elementObserver","useCallback","node","disconnect","IntersectionObserver","entries","isIntersecting","prev","observe","map","index","Card","loadingAnimation","follow","otherUserId","setFollowThisPerson","NEW_FOLLOWING","follower","following","REMOVE_FOLLOWING","socket","emit","unfollow","login","loginState","personalAccount","isFollowing","gotoPrivateChat","followThisPerson","Posts","Preloader","preloader","viewAccount","accountView","userInfo","setUserInfo","mounted","fetchUserInfo","res","id","SAVE_PERSONALCHAT_USER_DATA","imgUrl"],"mappings":"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","file":"static/js/5.39f05f1c.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default __webpack_public_path__ + \"static/media/profile.7f73584e.svg\";","export default __webpack_public_path__ + \"static/media/home.205e5c86.svg\";","export default __webpack_public_path__ + \"static/media/like.b16558c9.svg\";","export default __webpack_public_path__ + \"static/media/search.da3387c7.svg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n// icons\r\nimport profile from \"../img/profile.svg\";\r\nimport home from \"../img/home.svg\";\r\nimport like from \"../img/like.svg\";\r\nimport search from \"../img/search.svg\";\r\n\r\nfunction BottomNavBar({ profileImage, notifications }) {\r\n  return (\r\n    <div className=\"bottomNav \">\r\n      <div>\r\n        <Link to=\"/\">\r\n          <img src={home} alt=\"home\" height=\"23\" width=\"23\" />\r\n        </Link>\r\n        <Link to=\"/search\">\r\n          <img src={search} alt=\"search\" height=\"23\" width=\"23\" />\r\n        </Link>\r\n        <Link style={{ textDecoration: \"none\" }} to=\"/notification\">\r\n          <div className=\"notificationButton\">\r\n            {notifications.length > 0 ? (\r\n              <div>\r\n                <p>{notifications.length}</p>\r\n              </div>\r\n            ) : null}\r\n            <img src={like} alt=\"like\" height=\"23\" width=\"23\" />\r\n          </div>\r\n        </Link>\r\n        {profileImage === \"\" ? (\r\n          <Link to=\"/account\">\r\n            <img src={profile} alt=\"profile\" height=\"23\" width=\"23\" />\r\n          </Link>\r\n        ) : (\r\n          <Link to=\"/account\">\r\n            <img\r\n              src={profileImage}\r\n              className=\"rounded\"\r\n              alt=\"profile\"\r\n              height=\"23\"\r\n              width=\"23\"\r\n            />\r\n          </Link>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    profileImage: state.userdata.profileImage,\r\n    notifications: state.saveNotifications.notifications,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(BottomNavBar);\r\n","export function errorBarControl(setError, message) {\r\n  setError({ type: \"errorBar-show\", message });\r\n  setTimeout(() => {\r\n    setError({ type: \"\", message });\r\n  }, 1500);\r\n}\r\n\r\nexport function successBarControl(setSuccess, message) {\r\n  setSuccess({ type: \"successBar-show\", message });\r\n  setTimeout(() => {\r\n    setSuccess({ type: \"\", message });\r\n  }, 1500);\r\n}\r\n","import React from \"react\";\r\n\r\nexport function ErrorBar({ message, messageType }) {\r\n  return (\r\n    <div className={`errorBar ${messageType}`}>\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function SuccessBar({ message, messageType }) {\r\n  return (\r\n    <div className={`successBar ${messageType}`}>\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Ellipsis-1s-200px.aba39ddd.svg\";","export default __webpack_public_path__ + \"static/media/dark-heart.f1f73767.svg\";","export default __webpack_public_path__ + \"static/media/heart.fb824694.svg\";","export default __webpack_public_path__ + \"static/media/comments.d2e37373.svg\";","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n// icons\r\nimport noLike from \"../img/dark-heart.svg\";\r\nimport Like from \"../img/heart.svg\";\r\nimport comments from \"../img/comments.svg\";\r\nimport { VIEW_ACCOUNT, SHOW_POST } from \"../state/stateConstant\";\r\n\r\nfunction Card({\r\n  post,\r\n  elementView,\r\n  accountDetail,\r\n  dispatch,\r\n  accountId,\r\n  accessToken,\r\n}) {\r\n  const history = useHistory();\r\n  const [like, setLike] = useState(false);\r\n  const handleAccountView = () => {\r\n    if (post.userId === accountId) {\r\n      history.push(\"/account\");\r\n      return;\r\n    }\r\n    dispatch({ type: VIEW_ACCOUNT, payload: post.userId });\r\n    history.push(\"/viewaccount\");\r\n  };\r\n\r\n  const showComments = () => {\r\n    dispatch({ type: SHOW_POST, payload: post });\r\n    history.push(\"/showComments\");\r\n  };\r\n\r\n  const addLike = async () => {\r\n    setLike(true);\r\n    const res = await axios.post(\r\n      \"/api/addLike\",\r\n      {\r\n        postId: post._id,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      }\r\n    );\r\n    if (res.data.status === \"success\") {\r\n      console.log(\"success\");\r\n    }\r\n  };\r\n  /**\r\n   *  if accountDetail property is \"all\" than while\r\n   * loading post card will also show username and the profileImage\r\n   * on the top left corner otherwise it will not show it\r\n   */\r\n\r\n  return (\r\n    <div className=\"card\" ref={elementView}>\r\n      {accountDetail === \"all\" ? (\r\n        <div className=\"user\">\r\n          <img\r\n            src={post.profileImg}\r\n            onClick={handleAccountView}\r\n            alt=\"profilePic\"\r\n            height=\"50\"\r\n            width=\"50\"\r\n          />\r\n          <p onClick={handleAccountView}>{post.username}</p>\r\n        </div>\r\n      ) : null}\r\n      <div className=\"userPost\">\r\n        <img src={post.imageUrl} alt=\"postPic\" width=\"500\" height=\"300\" />\r\n        <p>{post.description}</p>\r\n      </div>\r\n      <div className=\"commentSection\">\r\n        <span onClick={addLike}>\r\n          {like ? (\r\n            <img src={Like} alt=\"noLike\" height=\"23\" width=\"23\" />\r\n          ) : (\r\n            <img src={noLike} alt=\"noLike\" height=\"23\" width=\"23\" />\r\n          )}\r\n        </span>\r\n        <img\r\n          src={comments}\r\n          alt=\"comments\"\r\n          height=\"23\"\r\n          width=\"23\"\r\n          onClick={showComments}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    accountId: state.userdata.userId,\r\n    accessToken: state.token.accessToken,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Card);\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n/**\r\n * @file custom hook for fetch all or a perticular user post\r\n * @param {number} skip - number of skip files\r\n * @param {string} api - api name for fetching post\r\n * @param {string} accessToken\r\n * @param {string} method - fetching method(get or post)\r\n * @param {object} jsonData - seding data in post method\r\n * @returns {object} - loading(boolean) && posts(array) && error(boolean)\r\n * @description this react custom hook fetch all the posts of a user or all users. It's return an object\r\n * while include a posts variable which is an array. Every array contain = _id,userId,\r\n * profileImage(user profile image url),likes(number of likes),commants(array),\r\n * username,imageUrl(post image),description(post description)\r\n */\r\n\r\nfunction useFetchPosts(skip, api, accessToken, method, jsonData = {}) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const numberOfDocs = useRef(false);\r\n  const [posts, setPosts] = useState([]);\r\n  const loadingPosts = async (skip) => {\r\n    if (numberOfDocs.current !== false && skip >= numberOfDocs.current) return;\r\n    setLoading(true);\r\n    setError(false);\r\n\r\n    let postsRes;\r\n\r\n    if (method === \"get\") {\r\n      postsRes = await axios.get(`${api}?skip=${skip}&limit=3`, {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      });\r\n    } else if (method === \"post\") {\r\n      postsRes = await axios.post(`${api}?skip=${skip}&limit=3`, jsonData, {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      });\r\n    }\r\n    if (postsRes.data.status === \"success\") {\r\n      setPosts((prevState) => [...prevState, ...postsRes.data.message]);\r\n      numberOfDocs.current = postsRes.data.numberOfDocuments;\r\n      setLoading(false);\r\n    } else if (postsRes.data.status === \"error\") {\r\n      setLoading(false);\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const source = axios.CancelToken.source();\r\n    loadingPosts(skip);\r\n    return () => {\r\n      source.cancel();\r\n    };\r\n  }, [skip]);\r\n  return { loading, posts, error };\r\n}\r\n\r\nexport default useFetchPosts;\r\n","import React, { useCallback, useRef, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport useFetchPosts from \"../requests/useFetchPosts\";\r\nimport Card from \"./Card\";\r\nimport loadingAnimation from \"../img/Ellipsis-1s-200px.svg\";\r\n\r\n/**\r\n *  Component for rendering all post also using infinite scroll for pagination\r\n */\r\n\r\nfunction Posts({\r\n  api,\r\n  marginTop,\r\n  accountDetail,\r\n  accessToken,\r\n  method,\r\n  jsonData,\r\n}) {\r\n  const [skip, setSkip] = useState(0);\r\n\r\n  const observer = useRef(); // get instence of last element\r\n\r\n  const { loading, posts, error } = useFetchPosts(\r\n    skip,\r\n    api,\r\n    accessToken,\r\n    method,\r\n    jsonData\r\n  );\r\n\r\n  // observe the last element when element show in screen\r\n  const elementObserver = useCallback(\r\n    (node) => {\r\n      if (loading) return;\r\n      if (observer.current) observer.current.disconnect();\r\n      observer.current = new IntersectionObserver((entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          setSkip((prev) => prev + 3);\r\n        }\r\n      });\r\n      if (node) observer.current.observe(node);\r\n    },\r\n    [loading]\r\n  );\r\n\r\n  return (\r\n    <div className=\"card-container\" style={{ marginTop: marginTop }}>\r\n      {posts.map((post, index) => {\r\n        if (index + 1 === posts.length) {\r\n          return (\r\n            <Card\r\n              accountDetail={accountDetail}\r\n              post={post}\r\n              key={post._id}\r\n              elementView={elementObserver}\r\n            />\r\n          );\r\n        } else {\r\n          return (\r\n            <Card accountDetail={accountDetail} post={post} key={post._id} />\r\n          );\r\n        }\r\n      })}\r\n      <div className=\"horizontal-center mar-bottom-2\">\r\n        {loading ? (\r\n          <img src={loadingAnimation} alt=\"loading\" height=\"50\" width=\"100\" />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    accessToken: state.token.accessToken,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Posts);\r\n","import axios from \"axios\";\nimport { NEW_FOLLOWING, REMOVE_FOLLOWING } from \"../state/stateConstant\";\nimport socket from \"../modules/handleSocket\";\n/**\n *\n * @param {string} accountId\n * @param {string} otherUserId\n * @param {string} accessToken\n * @param {Function} errorBarControl\n * @param {Function} setError\n * @param {Function} setFollowThisPerson\n * @param {Function} dispatch\n * @description handle follow data and error\n */\n\nexport const follow = async (\n  accountId,\n  otherUserId,\n  accessToken,\n  errorBarControl,\n  setError,\n  setFollowThisPerson,\n  dispatch\n) => {\n  setFollowThisPerson(true);\n  dispatch({ type: NEW_FOLLOWING });\n  const res = await axios.post(\n    \"/api/follow\",\n    { follower: accountId, following: otherUserId },\n    {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    }\n  );\n\n  if (res.data.status === \"error\") {\n    errorBarControl(setError, \"server error\");\n    setFollowThisPerson(false);\n    dispatch({ type: REMOVE_FOLLOWING });\n    return;\n  }\n\n  socket.emit(\"follow\", { follower: accountId, following: otherUserId });\n};\n\nexport const unfollow = async (\n  accountId,\n  otherUserId,\n  accessToken,\n  errorBarControl,\n  setError,\n  setFollowThisPerson,\n  dispatch\n) => {\n  setFollowThisPerson(false);\n  dispatch({ type: REMOVE_FOLLOWING });\n  const res = await axios.post(\n    \"/api/unfollow\",\n    {\n      follower: accountId,\n      following: otherUserId,\n    },\n    {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    }\n  );\n  if (res.data.status === \"error\") {\n    errorBarControl(setError, \"server error\");\n    setFollowThisPerson(true);\n    dispatch({ type: NEW_FOLLOWING });\n  }\n};\n","import React, { useState } from \"react\";\r\nimport Posts from \"../components/Posts\";\r\nimport { connect } from \"react-redux\";\r\nimport { errorBarControl } from \"../modules/notificationBarControl\";\r\nimport { ErrorBar } from \"../components/notification\";\r\nimport { follow, unfollow } from \"../requests/followHandler\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n/***\r\n *  component show user account and other users account\r\n *  this component also show the posts created by a user using Post component\r\n */\r\n\r\nfunction Account({\r\n  username,\r\n  profileImage,\r\n  follower,\r\n  following,\r\n  api,\r\n  personalAccount,\r\n  method,\r\n  jsonData,\r\n  accountId,\r\n  otherUserId,\r\n  isFollowing,\r\n  accessToken,\r\n  dispatch,\r\n  login,\r\n  gotoPrivateChat,\r\n}) {\r\n  const [followThisPerson, setFollowThisPerson] = useState(isFollowing);\r\n  const [error, setError] = useState({ type: \"\", message: \"\" });\r\n  const history = useHistory();\r\n  const handleFollow = () => {\r\n    if (!login) {\r\n      history.push(\"/login\");\r\n    }\r\n    follow(\r\n      accountId,\r\n      otherUserId,\r\n      accessToken,\r\n      errorBarControl,\r\n      setError,\r\n      setFollowThisPerson,\r\n      dispatch\r\n    );\r\n  };\r\n  const handleUnFollow = () => {\r\n    unfollow(\r\n      accountId,\r\n      otherUserId,\r\n      accessToken,\r\n      errorBarControl,\r\n      setError,\r\n      setFollowThisPerson,\r\n      dispatch\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"account\">\r\n        <div className=\"account-details\">\r\n          <div className=\"userInfo\">\r\n            <div className=\"user-details\">\r\n              <img\r\n                src={profileImage}\r\n                className=\"rounded\"\r\n                alt=\"profileImg\"\r\n                height=\"70\"\r\n                width=\"70\"\r\n              />\r\n              <div>\r\n                <h2 className=\"text-center\">{follower}</h2>\r\n                <p>Follower</p>\r\n              </div>\r\n              <div>\r\n                <h2 className=\"text-center\">{following}</h2>\r\n                <p>Following</p>\r\n              </div>\r\n            </div>\r\n            <h3 className=\"account-name\">{username}</h3>\r\n            {personalAccount ? (\r\n              <Link to=\"/settings\">\r\n                <button className=\"btn-full-primary\">account setting</button>\r\n              </Link>\r\n            ) : null}\r\n            {!personalAccount ? (\r\n              <button onClick={gotoPrivateChat} className=\"btn-full-primary\">\r\n                chat\r\n              </button>\r\n            ) : null}\r\n            {personalAccount ? null : followThisPerson ? (\r\n              <button className=\"btn-full-caution\" onClick={handleUnFollow}>\r\n                unfollow\r\n              </button>\r\n            ) : (\r\n              <button className=\"btn-full-secondary\" onClick={handleFollow}>\r\n                follow\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"mar-top-1\">\r\n          <Posts\r\n            api={api}\r\n            marginTop=\"0px\"\r\n            /**\r\n             *  because we are showing post inside an account,\r\n             * so there is no need to show profileName and profileImage\r\n             * in each Post cards. So, we are going to set accountDetails\r\n             * attribute \"personal\"(we can use any string other than \"all\", because\r\n             * if we use all than card will gonna show profile name and image)\r\n             */\r\n            accountDetail=\"personal\"\r\n            method={method}\r\n            jsonData={jsonData}\r\n          />\r\n        </div>\r\n      </div>\r\n      <ErrorBar message={error.message} messageType={error.type} />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    accessToken: state.token.accessToken,\r\n    login: state.loginState.login,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Account);\r\n","import React from \"react\";\r\nimport preloader from \"../img/preloader.svg\";\r\n\r\nexport default function Preloader() {\r\n  return (\r\n    <div className=\"absolute-center\">\r\n      <img src={preloader} alt=\"preloader\" width=\"100\" height=\"100\" />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport BottomNav from \"../components/BottomNavBar\";\r\nimport Account from \"../components/Account\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport Preloader from \"../components/preloader\";\r\nimport { SAVE_PERSONALCHAT_USER_DATA } from \"../state/stateConstant.js\";\r\n\r\nfunction UsersAccount({ otherUserId, accountId, dispatch }) {\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const history = useHistory();\r\n  const mounted = useRef(true);\r\n  const fetchUserInfo = async () => {\r\n    const res = await axios.post(\"/api/otherUserInfo\", {\r\n      otherUserId: otherUserId,\r\n      accountId: accountId,\r\n    });\r\n    if (res.data.status === \"success\") {\r\n      setUserInfo(res.data);\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  const gotoPrivateChat = () => {\r\n    dispatch({\r\n      type: SAVE_PERSONALCHAT_USER_DATA,\r\n      payload: {\r\n        userId: userInfo.userId,\r\n        username: userInfo.username,\r\n        imgUrl: userInfo.profileImage,\r\n      },\r\n    });\r\n\r\n    history.push(\"/personalChat\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    mounted.current = true;\r\n    fetchUserInfo();\r\n    return () => {\r\n      mounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {userInfo !== null ? (\r\n        <div>\r\n          <Account\r\n            api=\"/api/otherUserPost\"\r\n            jsonData={{ id: otherUserId, accountId: accountId }}\r\n            method=\"post\"\r\n            username={userInfo.username}\r\n            profileImage={userInfo.profileImage}\r\n            follower={userInfo.follower}\r\n            following={userInfo.following}\r\n            isFollowing={userInfo.isFollowing}\r\n            /**\r\n             *  if personal account false then viewing\r\n             * a user account it will it will not going to show\r\n             * account setting button and if true than follow button\r\n             * will be hidden\r\n             */\r\n            personalAccount={false}\r\n            accountId={accountId}\r\n            otherUserId={otherUserId}\r\n            gotoPrivateChat={gotoPrivateChat}\r\n          />\r\n          <BottomNav />\r\n        </div>\r\n      ) : (\r\n        <Preloader />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    otherUserId: state.viewAccount.accountView,\r\n    accountId: state.userdata.userId,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(UsersAccount);\r\n"],"sourceRoot":""}