{"version":3,"sources":["img/profile.svg","img/home.svg","img/like.svg","img/search.svg","components/BottomNavBar.js","modules/notificationBarControl.js","components/notification.js","screens/Settings.js"],"names":["connect","state","profileImage","userdata","notifications","saveNotifications","className","to","src","home","alt","height","width","search","style","textDecoration","length","like","profile","errorBarControl","setError","message","type","setTimeout","successBarControl","setSuccess","ErrorBar","messageType","SuccessBar","accessToken","token","dispatch","history","useHistory","useState","password","username","usernameChange","setUsernameChange","oldPassword","newPassword","confirmPassword","changePassword","setChangePassword","error","succes","updateUserName","a","axios","put","headers","Authorization","res","data","status","CHANGE_USERNAME","payload","updatePassword","logout","post","socket","emit","RESET","push","console","log","htmlFor","onChange","e","DOMPurify","sanitize","target","value","id","name","onClick"],"mappings":"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","file":"static/js/10.e8c4c3c1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/profile.7f73584e.svg\";","export default __webpack_public_path__ + \"static/media/home.205e5c86.svg\";","export default __webpack_public_path__ + \"static/media/like.b16558c9.svg\";","export default __webpack_public_path__ + \"static/media/search.da3387c7.svg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n// icons\r\nimport profile from \"../img/profile.svg\";\r\nimport home from \"../img/home.svg\";\r\nimport like from \"../img/like.svg\";\r\nimport search from \"../img/search.svg\";\r\n\r\nfunction BottomNavBar({ profileImage, notifications }) {\r\n  return (\r\n    <div className=\"bottomNav \">\r\n      <div>\r\n        <Link to=\"/\">\r\n          <img src={home} alt=\"home\" height=\"23\" width=\"23\" />\r\n        </Link>\r\n        <Link to=\"/search\">\r\n          <img src={search} alt=\"search\" height=\"23\" width=\"23\" />\r\n        </Link>\r\n        <Link style={{ textDecoration: \"none\" }} to=\"/notification\">\r\n          <div className=\"notificationButton\">\r\n            {notifications.length > 0 ? (\r\n              <div>\r\n                <p>{notifications.length}</p>\r\n              </div>\r\n            ) : null}\r\n            <img src={like} alt=\"like\" height=\"23\" width=\"23\" />\r\n          </div>\r\n        </Link>\r\n        {profileImage === \"\" ? (\r\n          <Link to=\"/account\">\r\n            <img src={profile} alt=\"profile\" height=\"23\" width=\"23\" />\r\n          </Link>\r\n        ) : (\r\n          <Link to=\"/account\">\r\n            <img\r\n              src={profileImage}\r\n              className=\"rounded\"\r\n              alt=\"profile\"\r\n              height=\"23\"\r\n              width=\"23\"\r\n            />\r\n          </Link>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    profileImage: state.userdata.profileImage,\r\n    notifications: state.saveNotifications.notifications,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(BottomNavBar);\r\n","export function errorBarControl(setError, message) {\r\n  setError({ type: \"errorBar-show\", message });\r\n  setTimeout(() => {\r\n    setError({ type: \"\", message });\r\n  }, 1500);\r\n}\r\n\r\nexport function successBarControl(setSuccess, message) {\r\n  setSuccess({ type: \"successBar-show\", message });\r\n  setTimeout(() => {\r\n    setSuccess({ type: \"\", message });\r\n  }, 1500);\r\n}\r\n","import React from \"react\";\r\n\r\nexport function ErrorBar({ message, messageType }) {\r\n  return (\r\n    <div className={`errorBar ${messageType}`}>\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function SuccessBar({ message, messageType }) {\r\n  return (\r\n    <div className={`successBar ${messageType}`}>\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport ButtonNavBar from \"../components/BottomNavBar\";\nimport axios from \"axios\";\nimport { CHANGE_USERNAME, RESET } from \"../state/stateConstant\";\nimport {\n  errorBarControl,\n  successBarControl,\n} from \"../modules/notificationBarControl\";\nimport { ErrorBar, SuccessBar } from \"../components/notification\";\nimport socket from \"../modules/handleSocket\";\nimport { useHistory } from \"react-router-dom\";\nimport DOMPurify from \"dompurify\";\n\nfunction Settings({ dispatch, accessToken }) {\n  const history = useHistory();\n\n  const [usernameChange, setUsernameChange] = useState({\n    password: \"\",\n    username: \"\",\n  });\n\n  const [changePassword, setChangePassword] = useState({\n    oldPassword: \"\",\n    newPassword: \"\",\n    confirmPassword: \"\",\n  });\n\n  const [error, setError] = useState({ type: \"\", message: \"\" });\n  const [succes, setSuccess] = useState({ type: \"\", message: \"\" });\n\n  const usernameChange_password = (e) => {\n    setUsernameChange({\n      password: DOMPurify.sanitize(e.target.value),\n      username: usernameChange.username,\n    });\n  };\n\n  const usernameChange_username = (e) => {\n    setUsernameChange({\n      password: usernameChange.password,\n      username: DOMPurify.sanitize(e.target.value),\n    });\n  };\n\n  const changePassword_oldPassword = (e) => {\n    setChangePassword({\n      oldPassword: DOMPurify.sanitize(e.target.value),\n      newPassword: changePassword.newPassword,\n      confirmPassword: changePassword.confirmPassword,\n    });\n  };\n\n  const changePassword_newPassword = (e) => {\n    setChangePassword({\n      oldPassword: changePassword.oldPassword,\n      newPassword: DOMPurify.sanitize(e.target.value),\n      confirmPassword: changePassword.confirmPassword,\n    });\n  };\n\n  const changePassword_confirmPassword = (e) => {\n    setChangePassword({\n      oldPassword: changePassword.oldPassword,\n      newPassword: changePassword.newPassword,\n      confirmPassword: DOMPurify.sanitize(e.target.value),\n    });\n  };\n\n  const updateUserName = async () => {\n    const res = await axios.put(\n      \"/api/updateUserName\",\n      {\n        password: usernameChange.password,\n        username: usernameChange.username,\n      },\n      {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      }\n    );\n    if (res.data.status === \"success\") {\n      successBarControl(setSuccess, \"username updated\");\n      dispatch({ type: CHANGE_USERNAME, payload: usernameChange.username });\n    } else if (res.data.status === \"error\") {\n      errorBarControl(setError, \"there is a problem while updating username\");\n    }\n  };\n\n  const updatePassword = async () => {\n    const res = await axios.put(\n      \"/api/updatePassword\",\n      {\n        oldPassword: changePassword.oldPassword,\n        newPassword: changePassword.newPassword,\n      },\n      {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      }\n    );\n    if (res.data.status === \"success\") {\n      successBarControl(setSuccess, \"password updated\");\n    } else if (res.data.status === \"error\") {\n      errorBarControl(setError, \"there is a problem while updating password\");\n    }\n  };\n\n  const logout = async () => {\n    const res = await axios.post(\"/api/logout\", null, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    });\n    if (res.data.status === \"success\") {\n      socket.emit(\"isUserActive\", { status: \"offline\" });\n      dispatch({ type: RESET });\n      history.push(\"/\");\n    } else {\n      errorBarControl(setError, \"unable to logout, try again later\");\n      console.log(res.data.message);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"settings\">\n        <h1>Settings</h1>\n        <fieldset className=\"changeData\">\n          <legend>Change Username</legend>\n          <label htmlFor=\"password\">password</label>\n          <input\n            onChange={usernameChange_password}\n            type=\"password\"\n            className=\"inputData\"\n            id=\"password\"\n            name=\"password\"\n            value={usernameChange.password}\n          />\n          <label htmlFor=\"username\">new username</label>\n          <input\n            onChange={usernameChange_username}\n            type=\"text\"\n            id=\"username\"\n            className=\"inputData\"\n            name=\"username\"\n            value={usernameChange.username}\n          />\n          <div className=\"save\">\n            <button onClick={updateUserName}>save</button>\n          </div>\n        </fieldset>\n        <fieldset className=\"changeData\">\n          <legend>Change Password</legend>\n          <label htmlFor=\"oldPassword\">old password</label>\n          <input\n            onChange={changePassword_oldPassword}\n            type=\"password\"\n            className=\"inputData\"\n            id=\"oldPassword\"\n            name=\"oldPassword\"\n            value={changePassword.oldPassword}\n          />\n          <label htmlFor=\"newPasword\">new password</label>\n          <input\n            onChange={changePassword_newPassword}\n            type=\"password\"\n            id=\"newPassword\"\n            className=\"inputData\"\n            name=\"newPassword\"\n            value={changePassword.newPassword}\n          />\n          <label htmlFor=\"confirmPassword\">confirm Password</label>\n          <input\n            onChange={changePassword_confirmPassword}\n            type=\"password\"\n            id=\"confirmPassword\"\n            className=\"inputData\"\n            name=\"confirmPassword\"\n            value={changePassword.confirmPassword}\n          />\n          <div className=\"save\">\n            <button onClick={updatePassword}>save</button>\n          </div>\n        </fieldset>\n        <div className=\"logout\">\n          <button onClick={logout}>Logout</button>\n        </div>\n      </div>\n      <SuccessBar message={succes.message} messageType={succes.type} />\n      <ErrorBar message={error.message} messageType={error.type} />\n      <ButtonNavBar />\n    </>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    accessToken: state.token.accessToken,\n  };\n}\n\nexport default connect(mapStateToProps)(Settings);\n"],"sourceRoot":""}