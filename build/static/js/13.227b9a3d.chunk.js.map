{"version":3,"sources":["modules/notificationBarControl.js","components/notification.js","components/InputField.js","screens/Login.js"],"names":["errorBarControl","setError","message","type","setTimeout","successBarControl","setSuccess","ErrorBar","messageType","className","SuccessBar","InputField","fieldName","fieldType","data","extraClass","useState","fieldEffect","setFieldEffect","onChange","onFocus","onBlur","connect","dispatch","username","setUsername","password","setPassword","error","history","useHistory","handleSubmit","e","a","preventDefault","axios","post","res","status","SAVE_USERDATA","payload","userId","email","profileImage","follower","following","LOGIN","GET_ACCESS_TOKEN","accessToken","socket","auth","accountId","emit","push","DOMPurify","sanitize","target","value","onClick","to"],"mappings":"uGAAO,SAASA,EAAgBC,EAAUC,GACxCD,EAAS,CAAEE,KAAM,gBAAiBD,YAClCE,YAAW,WACTH,EAAS,CAAEE,KAAM,GAAID,cACpB,MAGE,SAASG,EAAkBC,EAAYJ,GAC5CI,EAAW,CAAEH,KAAM,kBAAmBD,YACtCE,YAAW,WACTE,EAAW,CAAEH,KAAM,GAAID,cACtB,MAXL,qE,iCCAA,oFAEO,SAASK,EAAT,GAA6C,IAAzBL,EAAwB,EAAxBA,QAASM,EAAe,EAAfA,YAClC,OACE,qBAAKC,UAAS,mBAAcD,GAA5B,SACE,4BAAIN,MAKH,SAASQ,EAAT,GAA+C,IAAzBR,EAAwB,EAAxBA,QAASM,EAAe,EAAfA,YACpC,OACE,qBAAKC,UAAS,qBAAgBD,GAA9B,SACE,4BAAIN,Q,8FCXK,SAASS,EAAT,GAKX,IAJFC,EAIC,EAJDA,UACAC,EAGC,EAHDA,UACAC,EAEC,EAFDA,KAEC,IADDC,kBACC,MADY,GACZ,IACqCC,mBAAS,IAD9C,mBACMC,EADN,KACmBC,EADnB,KASD,OACE,gCACE,uBAAOT,UAAU,aAAjB,SAA+BG,IAC/B,uBACEH,UAAS,oBAAeQ,EAAf,YAA8BF,GACvCI,SAAUL,EACVX,KAAMU,EACNO,QAdc,WAClBF,EAAe,mBAcXG,OAZmB,WACvBH,EAAe,Y,gMCmHJI,yBAnHf,YAA8B,IAAbC,EAAY,EAAZA,SAAY,EAKKP,mBAAS,IALd,mBAKpBQ,EALoB,KAKVC,EALU,OAMKT,mBAAS,IANd,mBAMpBU,EANoB,KAMVC,EANU,OAODX,mBAAS,CAAEb,KAAM,GAAID,QAAS,KAP7B,mBAOpB0B,EAPoB,KAOb3B,EAPa,KAQrB4B,EAAUC,cAMVC,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,yDACnBD,EAAEE,iBACe,KAAbV,GAAgC,KAAbE,EAFJ,uBAGjB1B,YAAgBC,EAAU,kCAHT,0CAQHkC,IAAMC,KAAK,aAAc,CACvCZ,WACAE,aAViB,UAkBA,WANnBW,GAJIA,EARe,QAYTvB,MAMFwB,OAlBW,wBAoBjBtC,YAAgBC,EAAUoC,EAAInC,SApBb,2BAyBjBqB,EAAS,CACPpB,KAAMoC,IACNC,QAAS,CACPC,OAAQJ,EAAII,OACZjB,SAAUa,EAAIb,SACdkB,MAAOL,EAAIK,MACXC,aAAcN,EAAIM,aAClBC,SAAUP,EAAIO,SACdC,UAAWR,EAAIQ,aAGnBtB,EAAS,CAAEpB,KAAM2C,MACjBvB,EAAS,CAAEpB,KAAM4C,IAAkBP,QAASH,EAAIW,cAChDC,IAAOC,KAAO,CAAEC,UAAWd,EAAII,QAC/BQ,IAAO3B,UACP2B,IAAOG,KAAK,eAAgB,CAAEd,OAAQ,WACtCT,EAAQwB,KAAK,KAzCI,4CAAH,sDAgElB,OACE,qCACE,sBAAM5C,UAAU,kBAAhB,SACE,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,0BAAd,mBACA,cAAC,IAAD,CACEK,KArBa,SAACkB,GACtBP,EAAY6B,IAAUC,SAASvB,EAAEwB,OAAOC,SAqBhC5C,UAAU,OACVD,UAAU,aAEZ,cAAC,IAAD,CACEE,KAlBa,SAACkB,GACtBL,EAAY2B,IAAUC,SAASvB,EAAEwB,OAAOC,SAkBhC5C,UAAU,WACVD,UAAU,aAEZ,qBAAKH,UAAU,8BAAf,SACE,wBACEiD,QAAS3B,EACTtB,UAAU,gBACVN,KAAK,SAHP,sBAQF,oBAAGM,UAAU,2BAAb,oCAC0B,IACxB,cAAC,IAAD,CAAMA,UAAU,mBAAmBkD,GAAG,UAAtC,4BAMN,cAAC,IAAD,CAAUzD,QAAS0B,EAAM1B,QAASM,YAAaoB,EAAMzB","file":"static/js/13.227b9a3d.chunk.js","sourcesContent":["export function errorBarControl(setError, message) {\r\n  setError({ type: \"errorBar-show\", message });\r\n  setTimeout(() => {\r\n    setError({ type: \"\", message });\r\n  }, 1500);\r\n}\r\n\r\nexport function successBarControl(setSuccess, message) {\r\n  setSuccess({ type: \"successBar-show\", message });\r\n  setTimeout(() => {\r\n    setSuccess({ type: \"\", message });\r\n  }, 1500);\r\n}\r\n","import React from \"react\";\r\n\r\nexport function ErrorBar({ message, messageType }) {\r\n  return (\r\n    <div className={`errorBar ${messageType}`}>\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function SuccessBar({ message, messageType }) {\r\n  return (\r\n    <div className={`successBar ${messageType}`}>\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function InputField({\r\n  fieldName,\r\n  fieldType,\r\n  data,\r\n  extraClass = \"\",\r\n}) {\r\n  const [fieldEffect, setFieldEffect] = useState(\"\");\r\n  const handleFocus = () => {\r\n    setFieldEffect(\"inputDataFocus\");\r\n  };\r\n  const handleBlurEffect = () => {\r\n    setFieldEffect(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label className=\"labelValue\">{fieldName}</label>\r\n      <input\r\n        className={`inputData ${fieldEffect} ${extraClass}`}\r\n        onChange={data}\r\n        type={fieldType}\r\n        onFocus={handleFocus}\r\n        onBlur={handleBlurEffect}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { errorBarControl } from \"../modules/notificationBarControl\";\r\nimport { GET_ACCESS_TOKEN, SAVE_USERDATA, LOGIN } from \"../state/stateConstant\";\r\nimport socket from \"../modules/handleSocket\";\r\n// components\r\nimport InputField from \"../components/InputField\";\r\nimport { ErrorBar } from \"../components/notification\";\r\nimport DOMPurify from \"dompurify\";\r\n\r\nfunction Login({ dispatch }) {\r\n  /**\r\n   *  --- ------------local states--------------\r\n   */\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState({ type: \"\", message: \"\" });\r\n  const history = useHistory();\r\n\r\n  /** ************************************* /\r\n   *  ----- handle submit  ----------  /\r\n   *  **************************************/\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (username === \"\" || password === \"\") {\r\n      errorBarControl(setError, \"please provide all information\");\r\n      return;\r\n    }\r\n\r\n    // fetch data from login api\r\n    let res = await axios.post(\"/api/login\", {\r\n      username,\r\n      password,\r\n    });\r\n    res = res.data;\r\n\r\n    /**\r\n     *  check if get error or not\r\n     */\r\n\r\n    if (res.status === \"error\") {\r\n      // if we get error then set the error message\r\n      errorBarControl(setError, res.message);\r\n      return;\r\n    } else {\r\n      // continue if we don't have an error\r\n      // dispatch event to save user data and accessToken\r\n      dispatch({\r\n        type: SAVE_USERDATA,\r\n        payload: {\r\n          userId: res.userId,\r\n          username: res.username,\r\n          email: res.email,\r\n          profileImage: res.profileImage,\r\n          follower: res.follower,\r\n          following: res.following,\r\n        },\r\n      });\r\n      dispatch({ type: LOGIN });\r\n      dispatch({ type: GET_ACCESS_TOKEN, payload: res.accessToken });\r\n      socket.auth = { accountId: res.userId };\r\n      socket.connect();\r\n      socket.emit(\"isUserActive\", { status: \"online\" });\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  /** ************************************* /\r\n   *  ----- handle username  ----------  /\r\n   *  **************************************/\r\n\r\n  const handleUsername = (e) => {\r\n    setUsername(DOMPurify.sanitize(e.target.value));\r\n  };\r\n\r\n  /** ************************************* /\r\n   *  ----- handle password ----------  /\r\n   *  **************************************/\r\n\r\n  const handlePassword = (e) => {\r\n    setPassword(DOMPurify.sanitize(e.target.value));\r\n  };\r\n\r\n  /**\r\n   *  return component\r\n   */\r\n  return (\r\n    <>\r\n      <form className=\"absolute-center\">\r\n        <div className=\"form-container\">\r\n          <h1 className=\"authHeading text-center\">Login</h1>\r\n          <InputField\r\n            data={handleUsername}\r\n            fieldType=\"text\"\r\n            fieldName=\"username\"\r\n          />\r\n          <InputField\r\n            data={handlePassword}\r\n            fieldType=\"password\"\r\n            fieldName=\"password\"\r\n          />\r\n          <div className=\"horizontal-center mar-top-1\">\r\n            <button\r\n              onClick={handleSubmit}\r\n              className=\"btn-primary-2\"\r\n              type=\"submit\"\r\n            >\r\n              submit\r\n            </button>\r\n          </div>\r\n          <p className=\"text-center para-1-light\">\r\n            don't have an account ?{\" \"}\r\n            <Link className=\"linkLine-primary\" to=\"/signup\">\r\n              Signup\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </form>\r\n      <ErrorBar message={error.message} messageType={error.type} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect()(Login);\r\n"],"sourceRoot":""}